@using BuildYourself.Domain.Enities;
@{
    ViewData["Title"] = "Home Page";
}

@model IEnumerable<BuildYourself.Domain.Enities.FileItem>

<div class="container">
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <div class="card">
                <div class="card-body">
                    <form class="needs-validation" id="createFileCategoryForm" method="post" novalidate>
                        <h5 class="text-center">Create a Category</h5>
                        <div class="form-group mb-1">
                            <label for="categoryNameInput">Name:</label>
                            <input name="categoryName" type="text" class="form-control" id="categoryNameInput" required>
                            <div class="valid-feedback">
                                Looks good!
                            </div>
                        </div>
                        <div class="form-group mb-1">
                            <label for="categoryDescInput">Description:</label>
                            <textarea name="categoryDescription" class="form-control" id="categoryDescInput" required></textarea>
                            <div class="valid-feedback">
                                Looks good!
                            </div>
                        </div>
                        <div class="mb-2">
                            <input name="categoryIsEntertainment" type="checkbox" value="true" class="form-check-input" /> Entertainment
                        </div>
                        <div class="col-12">
                            <button class="btn btn-primary" id="createFileCategory">Submit form</button>
                        </div>
                    </form>
                </div>
            </div>
            <hr />
            <div class="card">
                <div class="card-body">
                    <form class="needs-validation" id="createFileForm" method="post" novalidate>
                        <h5 class="text-center">Create a File</h5>
                        <div class="form-group mb-1">
                            <label for="itemNameInput">Name:</label>
                            <input name="fileName" type="text" class="form-control" id="itemNameInput" required>
                            <div class="valid-feedback">
                                Looks good!
                            </div>
                        </div>
                        <div class="form-group mb-1">
                            <label for="itemDescInput">Description:</label>
                            <textarea name="fileDescription" class="form-control" id="itemDescInput" required></textarea>
                            <div class="valid-feedback">
                                Looks good!
                            </div>
                        </div>
                        <div class="checkbox mb-2">
                            <label for="selectCategory" class="form-label">Category:</label>
                            <select name="fileCategory" id="selectCategory" class="form-select selectpicker" data-live-search="true" required>
                                @foreach (var category in ViewBag.Categories)
                                {
                                    <option data-tokens="@category.Text">@category.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-12">
                            <button class="btn btn-primary" id="createFile" type="submit">Submit form</button>
                        </div>
                    </form>
                </div>
            </div>
            <br />
        </div>
        <div class="col-md-8 order-md-1">
            <h5 class="text-center">All Files</h5>
            <br />
            <div class="input-group rounded" style="max-width:350px">
                <input type="search" class="form-control rounded" onkeyup="FilterTable()" placeholder="Search" id="myInput" />
                <span class="input-group-text border-0" id="search-addon">
                    <i class="fas fa-search"></i>
                </span>
            </div>

            <table class="table table-hover" id="tbl">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Category</th>
                    <th>Action</th>
                </tr>
                @foreach (var file in Model)
                {
                    <tr>
                        @using (Html.BeginForm("ChangeFileStatus", "File", FormMethod.Post))
                        {
                            <td>
                                <input name="testName" type="hidden" value="@file.Name" />
                                <p>@file.Name</p>
                            </td>
                            <td>@file.Description</td>
                            <td>@file.Category.Name</td>
                            <td>
                                @if (file.Status == BuildYourself.Domain.Enums.FileStatus.Uncompleted)
                                {
                                    <input id="changeBtn" type="submit"  value="Start File" />
                                }
                                else if (file.Status == BuildYourself.Domain.Enums.FileStatus.InProcess)
                                {
                                    <input id="changeBtn" type="submit" value="End File" />
                                }
                                else
                                {
                                    <input id="changeBtn" type="submit" value="Reset" />
                                }
                            </td>
                        }
                    </tr>
                }
            </table>
            <div class="row">
                <div class="col-6">
                    <ul class="list-group">
                        @foreach (var file in Model)
                        {
                            @if(file.Status == BuildYourself.Domain.Enums.FileStatus.InProcess)
                            {
                                <ul class="list-group list-group-horizontal">
                                    <li class="list-group-item">@file.Name</li>
                                    <li class="list-group-item">
                                        <input value="@file.Description" />
                                    </li>
                                    <li class="list-group-item"><i class="fa-solid fa-bolt"></i></li>
                                </ul>
                            }
                        }
                    </ul>
                </div>
                <div class="col-6">

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="https://kit.fontawesome.com/94804be35d.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script>
    <script>
        (function () {
            'use strict'

            var forms = document.querySelectorAll('.needs-validation')

            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        function FilterTable() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("tbl");
            tr = table.getElementsByTagName("tr");

            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                for (var j = 0; j < td.length; j++) {
                    cell = tr[i].getElementsByTagName("td")[j];
                    if (cell) {
                        if (cell.innerText.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        }
                    }
                }
            }
        }

        $(function () {
            $('.selectpicker').selectpicker();
        });

        $('#createFileCategory').on('click', function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateCategory", "File")',
                data: $('#createFileCategoryForm').serialize(),
                success: function(response){
                    select = document.getElementById('selectCategory');
                    name = document.getElementById('categoryNameInput').value;
                    var opt = document.createElement('option');

                    opt.value = name;
                    opt.text = name;
                    opt.id = name;
                    select.appendChild(opt);

                    Swal.fire({
                        title: "Information",
                        text: response.description,
                        icon: "success"
                    });
                },
                error: function(response){
                    Swal.fire({
                        title: "Information",
                        text: response.responseJSON.description,
                        icon: "error"
                    });
                }       
            })
        });

        $('#createFile').on('click', function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateFile", "File")',
                data: $('#createFileForm').serialize(),
                success: function(response){
                    Swal.fire({
                        title: "Information",
                        text: response.description,
                        icon: "success"
                    });

                    var table = document.getElementById("tbl");
                    row = table.insertRow();

                    var cell = row.insertCell();
                    cell.innerHTML = document.getElementById('itemNameInput').value;

                    cell = row.insertCell();
                    cell.innerHTML = document.getElementById('itemDescInput').value;

                    cell = row.insertCell();
                    cell.innerHTML = document.getElementById('selectCategory').value;

                    cell = row.insertCell();
                    var newinp = document.createElement('input');
                    newinp.value = "Start File";
                    newinp.type = "button";
                    newinp.onclick = function dofun() {
                        var parameters = {
                            TestName: document.getElementById('itemNameInput').value
                        };
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ChangeFileStatus", "File")',
                            data: parameters,
                            success: function (response) {
                                if(newinp.value == "Start File"){
                                    newinp.value = "End File";
                                }
                                else if (newinp.value == "End File") {
                                    newinp.value = "Reset";
                                }
                                else {
                                    newinp.value = "Start File";
                                }
                            },
                            error: function (response) {
                                Swal.fire({
                                    title: "Error",
                                    text: "Something went wrong. We can't change status",
                                    icon: "error"
                                });
                            }
                        });
                    };
                    cell.appendChild(newinp);
                    
                },
                error: function(response){
                    Swal.fire({
                        title: "Information",
                        text: response.responseJSON.description,
                        icon: "error"
                    });
                }
            })
        });
    </script>
}